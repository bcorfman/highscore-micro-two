[project]
name = "highscore-micro-two"
version = "0.2.0"
description = "A FastAPI ASGI microservice to create/query a high score list using SQLModel. Backend is a PostgreSQL database deployed on the ElephantSQL cloud."
license = "MIT"
dependencies = [
    "fastapi>=0.109.0",
    "uvicorn>=0.26.0",
    "sqlmodel>=0.0.14",
    "alembic>=1.13.1",
    "pydantic>=2.5.3",
    "sqlalchemy>=2.0.25",
    "greenlet>=3.0.3",
    "requests>=2.31.0",
    "itsdangerous>=2.1.2",
    "asyncio>=3.4.3",
    "psycopg2-binary>=2.9.9",
    "asyncpg>=0.29.0",
    "gunicorn>=21.2.0",
    "httpx>=0.26.0",
]
readme = "README.md"
requires-python = ">= 3.9"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "yapf>=0.40.2",
    "pytest>=7.4.4",
    "pytest-cov>=4.1.0",
    "pylint>=3.0.3",
    "ipython>=8.18.1",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/highscore-micro-two"]

[tool.yapf]
column_limit = 100
indent_dictionary_value = "True"
allow_split_before_dict_value = "False"

[tool.pytest.ini_options]
addopts = "--cov-branch --cov-report term"
testpaths = ["tests"]
filterwarnings = ["ignore::DeprecationWarning"]

[tool.coverage.run]
source = ["core"]

[tool.pylint]
max-line-length = 100
disable = [
    "C0103", # (invalid-name)
    "C0114", # (missing-module-docstring)
    "C0115", # (missing-class-docstring)
    "C0116", # (missing-function-docstring)
    "C0415", # (import-outside-toplevel)
    "R0401", # (cyclic-import)
    "R0902", # (too-many-instance-attributes)
    "R0903", # (too-few-public-methods)
    "R0913", # (too-many-arguments)
    "R0914", # (too-many-locals)
    "W0105", # (pointless-string-statement)
]
